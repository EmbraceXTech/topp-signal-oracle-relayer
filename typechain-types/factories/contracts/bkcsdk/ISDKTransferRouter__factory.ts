/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ISDKTransferRouter,
  ISDKTransferRouterInterface,
} from "../../../contracts/bkcsdk/ISDKTransferRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddr_",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "bitkubNext_",
        type: "address",
      },
    ],
    name: "transferKAP20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddr_",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "bitkubNext_",
        type: "address",
      },
    ],
    name: "transferKAP721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ISDKTransferRouter__factory {
  static readonly abi = _abi;
  static createInterface(): ISDKTransferRouterInterface {
    return new Interface(_abi) as ISDKTransferRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ISDKTransferRouter {
    return new Contract(address, _abi, runner) as unknown as ISDKTransferRouter;
  }
}
