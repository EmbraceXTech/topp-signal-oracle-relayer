/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SignalTicketERC20,
  SignalTicketERC20Interface,
} from "../../contracts/SignalTicketERC20";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_time",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_time",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040518060400160405280600d81526020017f5369676e616c205469636b6574000000000000000000000000000000000000008152506040518060400160405280600381526020017f53544b0000000000000000000000000000000000000000000000000000000000815250816003908161008c91906102f4565b50806004908161009c91906102f4565b5050506103c6565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061012557607f821691505b602082108103610138576101376100de565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026101a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610163565b6101aa8683610163565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006101f16101ec6101e7846101c2565b6101cc565b6101c2565b9050919050565b6000819050919050565b61020b836101d6565b61021f610217826101f8565b848454610170565b825550505050565b600090565b610234610227565b61023f818484610202565b505050565b5b818110156102635761025860008261022c565b600181019050610245565b5050565b601f8211156102a8576102798161013e565b61028284610153565b81016020851015610291578190505b6102a561029d85610153565b830182610244565b50505b505050565b600082821c905092915050565b60006102cb600019846008026102ad565b1980831691505092915050565b60006102e483836102ba565b9150826002028217905092915050565b6102fd826100a4565b67ffffffffffffffff811115610316576103156100af565b5b610320825461010d565b61032b828285610267565b600060209050601f83116001811461035e576000841561034c578287015190505b61035685826102d8565b8655506103be565b601f19841661036c8661013e565b60005b828110156103945784890151825560018201915060208501945060208101905061036f565b868310156103b157848901516103ad601f8916826102ba565b8355505b6001600288020188555050505b505050505050565b61102e806103d56000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633a7ba8a3116100715780633a7ba8a314610168578063706ff6171461018457806370a08231146101a057806395d89b41146101d0578063a9059cbb146101ee578063dd62ed3e1461021e576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b661024e565b6040516100c39190610c1b565b60405180910390f35b6100e660048036038101906100e19190610cd6565b6102e0565b6040516100f39190610d31565b60405180910390f35b610104610303565b6040516101119190610d5b565b60405180910390f35b610134600480360381019061012f9190610d76565b61030d565b6040516101419190610d31565b60405180910390f35b61015261033c565b60405161015f9190610de5565b60405180910390f35b610182600480360381019061017d9190610e00565b610345565b005b61019e60048036038101906101999190610e00565b610355565b005b6101ba60048036038101906101b59190610e67565b610365565b6040516101c79190610d5b565b60405180910390f35b6101d86103ad565b6040516101e59190610c1b565b60405180910390f35b61020860048036038101906102039190610cd6565b61043f565b6040516102159190610d31565b60405180910390f35b61023860048036038101906102339190610e94565b610462565b6040516102459190610d5b565b60405180910390f35b60606003805461025d90610f03565b80601f016020809104026020016040519081016040528092919081815260200182805461028990610f03565b80156102d65780601f106102ab576101008083540402835291602001916102d6565b820191906000526020600020905b8154815290600101906020018083116102b957829003601f168201915b5050505050905090565b6000806102eb6104e9565b90506102f88185856104f1565b600191505092915050565b6000600254905090565b6000806103186104e9565b9050610325858285610503565b610330858585610597565b60019150509392505050565b60006012905090565b61034f828261068b565b50505050565b61035f828261070d565b50505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103bc90610f03565b80601f01602080910402602001604051908101604052809291908181526020018280546103e890610f03565b80156104355780601f1061040a57610100808354040283529160200191610435565b820191906000526020600020905b81548152906001019060200180831161041857829003601f168201915b5050505050905090565b60008061044a6104e9565b9050610457818585610597565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b6104fe838383600161078f565b505050565b600061050f8484610462565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105915781811015610581578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161057893929190610f43565b60405180910390fd5b6105908484848403600061078f565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106095760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106009190610f7a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361067b5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106729190610f7a565b60405180910390fd5b610686838383610966565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106fd5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106f49190610f7a565b60405180910390fd5b61070982600083610966565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361077f5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107769190610f7a565b60405180910390fd5b61078b60008383610966565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036108015760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107f89190610f7a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108735760006040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161086a9190610f7a565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610960578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109579190610d5b565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109b85780600260008282546109ac9190610fc4565b92505081905550610a8b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a44578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610a3b93929190610f43565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ad45780600260008282540392505081905550610b21565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b7e9190610d5b565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610bc5578082015181840152602081019050610baa565b60008484015250505050565b6000601f19601f8301169050919050565b6000610bed82610b8b565b610bf78185610b96565b9350610c07818560208601610ba7565b610c1081610bd1565b840191505092915050565b60006020820190508181036000830152610c358184610be2565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c6d82610c42565b9050919050565b610c7d81610c62565b8114610c8857600080fd5b50565b600081359050610c9a81610c74565b92915050565b6000819050919050565b610cb381610ca0565b8114610cbe57600080fd5b50565b600081359050610cd081610caa565b92915050565b60008060408385031215610ced57610cec610c3d565b5b6000610cfb85828601610c8b565b9250506020610d0c85828601610cc1565b9150509250929050565b60008115159050919050565b610d2b81610d16565b82525050565b6000602082019050610d466000830184610d22565b92915050565b610d5581610ca0565b82525050565b6000602082019050610d706000830184610d4c565b92915050565b600080600060608486031215610d8f57610d8e610c3d565b5b6000610d9d86828701610c8b565b9350506020610dae86828701610c8b565b9250506040610dbf86828701610cc1565b9150509250925092565b600060ff82169050919050565b610ddf81610dc9565b82525050565b6000602082019050610dfa6000830184610dd6565b92915050565b60008060008060808587031215610e1a57610e19610c3d565b5b6000610e2887828801610cc1565b9450506020610e3987828801610cc1565b9350506040610e4a87828801610c8b565b9250506060610e5b87828801610cc1565b91505092959194509250565b600060208284031215610e7d57610e7c610c3d565b5b6000610e8b84828501610c8b565b91505092915050565b60008060408385031215610eab57610eaa610c3d565b5b6000610eb985828601610c8b565b9250506020610eca85828601610c8b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f1b57607f821691505b602082108103610f2e57610f2d610ed4565b5b50919050565b610f3d81610c62565b82525050565b6000606082019050610f586000830186610f34565b610f656020830185610d4c565b610f726040830184610d4c565b949350505050565b6000602082019050610f8f6000830184610f34565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fcf82610ca0565b9150610fda83610ca0565b9250828201905080821115610ff257610ff1610f95565b5b9291505056fea264697066735822122098d6089f51c418e6a893a3392799ecb4f0a2057f356a428408fcd12f69e7717264736f6c634300081b0033";

type SignalTicketERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SignalTicketERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SignalTicketERC20__factory extends ContractFactory {
  constructor(...args: SignalTicketERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SignalTicketERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SignalTicketERC20__factory {
    return super.connect(runner) as SignalTicketERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignalTicketERC20Interface {
    return new Interface(_abi) as SignalTicketERC20Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SignalTicketERC20 {
    return new Contract(address, _abi, runner) as unknown as SignalTicketERC20;
  }
}
