/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockPriceOracle,
  MockPriceOracleInterface,
} from "../../../contracts/test/MockPriceOracle";

const _abi = [
  {
    inputs: [],
    name: "caller",
    outputs: [
      {
        internalType: "contract IPriceOracleCaller",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "fulfillPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "requestPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_caller",
        type: "address",
      },
    ],
    name: "setCaller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506103ed8061001f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063beb92f5514610051578063d73d55fe1461006d578063fc9c8d3914610089578063ff800a80146100a7575b600080fd5b61006b60048036038101906100669190610222565b6100c3565b005b61008760048036038101906100829190610285565b610106565b005b61009161010a565b60405161009e9190610324565b60405180910390f35b6100c160048036038101906100bc919061033f565b61012e565b005b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff800a8083836040518363ffffffff1660e01b815260040161018992919061038e565b600060405180830381600087803b1580156101a357600080fd5b505af11580156101b7573d6000803e3d6000fd5b505050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101ef826101c4565b9050919050565b6101ff816101e4565b811461020a57600080fd5b50565b60008135905061021c816101f6565b92915050565b600060208284031215610238576102376101bf565b5b60006102468482850161020d565b91505092915050565b6000819050919050565b6102628161024f565b811461026d57600080fd5b50565b60008135905061027f81610259565b92915050565b6000806040838503121561029c5761029b6101bf565b5b60006102aa8582860161020d565b92505060206102bb85828601610270565b9150509250929050565b6000819050919050565b60006102ea6102e56102e0846101c4565b6102c5565b6101c4565b9050919050565b60006102fc826102cf565b9050919050565b600061030e826102f1565b9050919050565b61031e81610303565b82525050565b60006020820190506103396000830184610315565b92915050565b60008060408385031215610356576103556101bf565b5b600061036485828601610270565b925050602061037585828601610270565b9150509250929050565b6103888161024f565b82525050565b60006040820190506103a3600083018561037f565b6103b0602083018461037f565b939250505056fea2646970667358221220b720410e1b35601463cdccf32a4c54655c017869e795b9806fae5dd4b8425f6164736f6c634300081b0033";

type MockPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockPriceOracle__factory extends ContractFactory {
  constructor(...args: MockPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockPriceOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockPriceOracle__factory {
    return super.connect(runner) as MockPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPriceOracleInterface {
    return new Interface(_abi) as MockPriceOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockPriceOracle {
    return new Contract(address, _abi, runner) as unknown as MockPriceOracle;
  }
}
