/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TestRandomOracleCaller,
  TestRandomOracleCallerInterface,
} from "../../../contracts/test/TestRandomOracleCaller";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "fulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lastValues",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract IRandomOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "requestRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107ee3803806107ee833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b6106d7806101176000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063088680171461006757806350c62446146100835780637363ae1f146100b35780637adbf973146100cf5780637dc0d1d0146100eb57806393e9a08414610109575b600080fd5b610081600480360381019061007c9190610404565b610127565b005b61009d60048036038101906100989190610464565b6101d3565b6040516100aa91906104a0565b60405180910390f35b6100cd60048036038101906100c89190610464565b6101f7565b005b6100e960048036038101906100e49190610519565b610288565b005b6100f36102cb565b60405161010091906105a5565b60405180910390f35b6101116102ef565b60405161011e91906104a0565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ac9061061d565b60405180910390fd5b826002819055508181600191906101cd9291906102f5565b50505050565b600181815481106101e357600080fd5b906000526020600020016000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631f53cf048260036040518363ffffffff1660e01b8152600401610253929190610678565b600060405180830381600087803b15801561026d57600080fd5b505af1158015610281573d6000803e3d6000fd5b5050505050565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b828054828255906000526020600020908101928215610331579160200282015b82811115610330578235825591602001919060010190610315565b5b50905061033e9190610342565b5090565b5b8082111561035b576000816000905550600101610343565b5090565b600080fd5b600080fd5b6000819050919050565b61037c81610369565b811461038757600080fd5b50565b60008135905061039981610373565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126103c4576103c361039f565b5b8235905067ffffffffffffffff8111156103e1576103e06103a4565b5b6020830191508360208202830111156103fd576103fc6103a9565b5b9250929050565b60008060006040848603121561041d5761041c61035f565b5b600061042b8682870161038a565b935050602084013567ffffffffffffffff81111561044c5761044b610364565b5b610458868287016103ae565b92509250509250925092565b60006020828403121561047a5761047961035f565b5b60006104888482850161038a565b91505092915050565b61049a81610369565b82525050565b60006020820190506104b56000830184610491565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104e6826104bb565b9050919050565b6104f6816104db565b811461050157600080fd5b50565b600081359050610513816104ed565b92915050565b60006020828403121561052f5761052e61035f565b5b600061053d84828501610504565b91505092915050565b6000819050919050565b600061056b610566610561846104bb565b610546565b6104bb565b9050919050565b600061057d82610550565b9050919050565b600061058f82610572565b9050919050565b61059f81610584565b82525050565b60006020820190506105ba6000830184610596565b92915050565b600082825260208201905092915050565b7f4f6e6c79206f7261636c652063616e2066756c66696c6c000000000000000000600082015250565b60006106076017836105c0565b9150610612826105d1565b602082019050919050565b60006020820190508181036000830152610636816105fa565b9050919050565b6000819050919050565b600061066261065d6106588461063d565b610546565b610369565b9050919050565b61067281610647565b82525050565b600060408201905061068d6000830185610491565b61069a6020830184610669565b939250505056fea2646970667358221220fb9338593470ffb914ad3248a248d44b82bb551b29557e3b14d22d0d18453d5b64736f6c634300081b0033";

type TestRandomOracleCallerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestRandomOracleCallerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestRandomOracleCaller__factory extends ContractFactory {
  constructor(...args: TestRandomOracleCallerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _oracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_oracle, overrides || {});
  }
  override deploy(
    _oracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_oracle, overrides || {}) as Promise<
      TestRandomOracleCaller & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TestRandomOracleCaller__factory {
    return super.connect(runner) as TestRandomOracleCaller__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestRandomOracleCallerInterface {
    return new Interface(_abi) as TestRandomOracleCallerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestRandomOracleCaller {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TestRandomOracleCaller;
  }
}
