/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SimpleRandomOracle,
  SimpleRandomOracleInterface,
} from "../../../contracts/oracle/SimpleRandomOracle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RandomnessRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "randomness",
        type: "uint256[]",
      },
    ],
    name: "RandomnessUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "caller",
    outputs: [
      {
        internalType: "contract IRandomOracleCaller",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_randomness",
        type: "uint256[]",
      },
    ],
    name: "fulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "randomness",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "requestRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_caller",
        type: "address",
      },
    ],
    name: "setCaller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506107ba8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063088680171461005c5780631f53cf0414610078578063b4844fc714610094578063beb92f55146100c4578063fc9c8d39146100e0575b600080fd5b61007660048036038101906100719190610462565b6100fe565b005b610092600480360381019061008d91906104c2565b6101f0565b005b6100ae60048036038101906100a991906104c2565b6102bb565b6040516100bb9190610511565b60405180910390f35b6100de60048036038101906100d9919061058a565b6102ec565b005b6100e861032f565b6040516100f59190610616565b60405180910390f35b8181600160008681526020019081526020016000209190610120929190610353565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663088680178484846040518463ffffffff1660e01b815260040161017e939291906106ac565b600060405180830381600087803b15801561019857600080fd5b505af11580156101ac573d6000803e3d6000fd5b505050507fd750e043eacf6a9561b4e760a1fb5e0ac214f298ac5f76d8f7f84560594c250c8383836040516101e3939291906106ac565b60405180910390a1505050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461027e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102759061073b565b60405180910390fd5b7f3d94fecedaa4f90b8bd459797adb95f5bb11426025c5541390d9ccc1ad1b60a182826040516102af92919061075b565b60405180910390a15050565b600160205281600052604060002081815481106102d757600080fd5b90600052602060002001600091509150505481565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b82805482825590600052602060002090810192821561038f579160200282015b8281111561038e578235825591602001919060010190610373565b5b50905061039c91906103a0565b5090565b5b808211156103b95760008160009055506001016103a1565b5090565b600080fd5b600080fd5b6000819050919050565b6103da816103c7565b81146103e557600080fd5b50565b6000813590506103f7816103d1565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610422576104216103fd565b5b8235905067ffffffffffffffff81111561043f5761043e610402565b5b60208301915083602082028301111561045b5761045a610407565b5b9250929050565b60008060006040848603121561047b5761047a6103bd565b5b6000610489868287016103e8565b935050602084013567ffffffffffffffff8111156104aa576104a96103c2565b5b6104b68682870161040c565b92509250509250925092565b600080604083850312156104d9576104d86103bd565b5b60006104e7858286016103e8565b92505060206104f8858286016103e8565b9150509250929050565b61050b816103c7565b82525050565b60006020820190506105266000830184610502565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105578261052c565b9050919050565b6105678161054c565b811461057257600080fd5b50565b6000813590506105848161055e565b92915050565b6000602082840312156105a05761059f6103bd565b5b60006105ae84828501610575565b91505092915050565b6000819050919050565b60006105dc6105d76105d28461052c565b6105b7565b61052c565b9050919050565b60006105ee826105c1565b9050919050565b6000610600826105e3565b9050919050565b610610816105f5565b82525050565b600060208201905061062b6000830184610607565b92915050565b600082825260208201905092915050565b600080fd5b82818337505050565b600061065c8385610631565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561068f5761068e610642565b5b6020830292506106a0838584610647565b82840190509392505050565b60006040820190506106c16000830186610502565b81810360208301526106d4818486610650565b9050949350505050565b600082825260208201905092915050565b7f556e617574686f72697a65640000000000000000000000000000000000000000600082015250565b6000610725600c836106de565b9150610730826106ef565b602082019050919050565b6000602082019050818103600083015261075481610718565b9050919050565b60006040820190506107706000830185610502565b61077d6020830184610502565b939250505056fea26469706673582212208f4f6e8126705644544170a2104741f19ea52dda9baf8eeb204a9a0e8c30392f64736f6c634300081b0033";

type SimpleRandomOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleRandomOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleRandomOracle__factory extends ContractFactory {
  constructor(...args: SimpleRandomOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SimpleRandomOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleRandomOracle__factory {
    return super.connect(runner) as SimpleRandomOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleRandomOracleInterface {
    return new Interface(_abi) as SimpleRandomOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimpleRandomOracle {
    return new Contract(address, _abi, runner) as unknown as SimpleRandomOracle;
  }
}
