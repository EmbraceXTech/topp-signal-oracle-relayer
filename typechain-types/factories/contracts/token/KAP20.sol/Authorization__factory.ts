/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  Authorization,
  AuthorizationInterface,
} from "../../../../contracts/token/KAP20.sol/Authorization";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAdmin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AdminProjectRouterSet",
    type: "event",
  },
  {
    inputs: [],
    name: "PROJECT",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "adminProjectRouter",
    outputs: [
      {
        internalType: "contract IAdminProjectRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_adminProjectRouter",
        type: "address",
      },
    ],
    name: "setAdminProjectRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class Authorization__factory {
  static readonly abi = _abi;
  static createInterface(): AuthorizationInterface {
    return new Interface(_abi) as AuthorizationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Authorization {
    return new Contract(address, _abi, runner) as unknown as Authorization;
  }
}
