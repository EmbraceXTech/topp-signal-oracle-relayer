/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  Committee,
  CommitteeInterface,
} from "../../../../contracts/token/KAP20.sol/Committee";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldCommittee",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCommittee",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "CommitteeSet",
    type: "event",
  },
  {
    inputs: [],
    name: "committee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_committee",
        type: "address",
      },
    ],
    name: "setCommittee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class Committee__factory {
  static readonly abi = _abi;
  static createInterface(): CommitteeInterface {
    return new Interface(_abi) as CommitteeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Committee {
    return new Contract(address, _abi, runner) as unknown as Committee;
  }
}
