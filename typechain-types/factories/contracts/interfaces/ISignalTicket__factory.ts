/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ISignalTicket,
  ISignalTicketInterface,
} from "../../../contracts/interfaces/ISignalTicket";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ISignalTicket__factory {
  static readonly abi = _abi;
  static createInterface(): ISignalTicketInterface {
    return new Interface(_abi) as ISignalTicketInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ISignalTicket {
    return new Contract(address, _abi, runner) as unknown as ISignalTicket;
  }
}
